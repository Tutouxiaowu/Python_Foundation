# 数组我们在学习numpy的时候，就已经学会了
import numpy as np
# 好 现在我们创建一个数组arr
arr = np.arange(10)
print(arr)
# 好的，我们如果要来看它的效率问题
# 查 通常数组根据下标就可以查询到其对应的数值——>
print(arr[1]) # 故而其效率为 O1
# 又因为数组的地址是连续的，要想删除或者是插入一个数的话，就要挪位置 故而效率为 ON
# 总结数组的查询效率很高，但是插入和删除的效率很低


### 链表
# 列表其实和数组效率相反 他的查询效率为On 但是插入删除的效率为 O1
# 其大概是这个样子 head->data.next->data.next->data.next->null
# 判断是否为空也只需要 判断head是否指向null
#

